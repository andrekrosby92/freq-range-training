import type { NextPage } from "next";
import Head from "next/head";
import { Fragment, useState } from "react";

function pickRandomFromArray<T>(freqs: readonly T[]): T {
  return freqs[Math.floor(Math.random() * freqs.length)];
}
type AnswerStates = "pending" | "correct" | "incorrect";

const config = [
  {
    frequencyRange: "20-60 hz",
    keywords: "Rumbly, sloppy, loose",
    name: "sub-bass",
  },
  {
    frequencyRange: "60-200 hz",
    keywords: "Boomy, tubby, punchy",
    name: "low",
  },
  {
    frequencyRange: "200-700 hz",
    keywords: "Muddy, boxy",
    name: "low-mid",
  },
  {
    frequencyRange: "700-3k hz",
    keywords: "Nasally, honky, hollow",
    name: "mid",
  },
  {
    frequencyRange: "3k-7k hz",
    keywords: "Tinny, bitey",
    name: "high-mid",
  },
  {
    frequencyRange: "7k-20k hz",
    keywords: "Shimmery, airy",
    name: "high",
  },
] as const;

const filenames = config.map((elem) => elem.name);
const initialChallenge = pickRandomFromArray(filenames);

const Home: NextPage = () => {
  const [currentChallenge, setCurrentChallenge] = useState(initialChallenge);
  const [answerState, setAnswerState] = useState<AnswerStates>("pending");

  const isAnswerCorrect = answerState === "correct";
  const isAnswerIncorrect = answerState === "incorrect";

  const handleOnFrequencyRangeClick = (filename: typeof filenames[number]) => {
    if (filename === currentChallenge) {
      setAnswerState("correct");
    } else {
      setAnswerState("incorrect");
    }
  };

  const handleOnNextChallengeClick = () => {
    setCurrentChallenge(() => pickRandomFromArray(filenames));
    setAnswerState("pending");
  };

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="pt-8 px-2 flex flex-col items-center">
        <h1 className="text-2xl font-medium text-center ">Guess the range</h1>

        <audio className="inline-block my-4" controls key={currentChallenge}>
          <source src={`/audios/${currentChallenge}.wav`} type="audio/wav" />
        </audio>

        <div className="mb-4 grid grid-cols-2 gap-2">
          {config.map((elem) => {
            return (
              <button disabled={isAnswerCorrect} onClick={() => handleOnFrequencyRangeClick(elem.name)} key={elem.name}>
                <img src={`/images/${elem.name}.png`} className="rounded-lg" />
              </button>
            );
          })}
        </div>

        <div>
          {isAnswerCorrect && (
            <div className="space-y-4 flex flex-col items-center">
              <svg xmlns="http://www.w3.org/2000/svg" width="56" height="56" viewBox="0 0 24 24">
                <path
                  d="M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm-1.25 16.518l-4.5-4.319 1.396-1.435 3.078 2.937 6.105-6.218 1.421 1.409-7.5 7.626z"
                  fill="rgb(52, 199, 89)"
                />
              </svg>

              <div className="flex flex-col text-[#222] text-center">
                <span className="font-semibold">
                  {config.find((element) => element.name === currentChallenge)?.frequencyRange}
                </span>
                <span className="lowercase">
                  {config.find((element) => element.name === currentChallenge)?.keywords}
                </span>
              </div>

              <button
                className="text-white bg-blue-[rgb(0,122,255)] hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-3 text-center inline-flex items-center dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
                onClick={handleOnNextChallengeClick}
                type="button"
              >
                Next challenge
                <svg
                  aria-hidden="true"
                  className="ml-2 -mr-1 w-5 h-5"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    fill-rule="evenodd"
                    d="M10.293 3.293a1 1 0 011.414 0l6 6a1 1 0 010 1.414l-6 6a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-4.293-4.293a1 1 0 010-1.414z"
                    clip-rule="evenodd"
                  ></path>
                </svg>
              </button>
            </div>
          )}
        </div>

        <div>
          {isAnswerIncorrect && (
            <svg
              clip-rule="evenodd"
              fill-rule="evenodd"
              height="56"
              stroke-linejoin="round"
              stroke-miterlimit="2"
              viewBox="0 0 24 24"
              width="56"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="m2.179 10.201c.055-.298.393-.734.934-.59.377.102.612.476.543.86-.077.529-.141.853-.141 1.529 0 4.47 3.601 8.495 8.502 8.495 2.173 0 4.241-.84 5.792-2.284l-1.251-.341c-.399-.107-.636-.519-.53-.919.108-.4.52-.637.919-.53l3.225.864c.399.108.637.519.53.919l-.875 3.241c-.107.399-.519.636-.919.53-.399-.107-.638-.518-.53-.918l.477-1.77c-1.829 1.711-4.27 2.708-6.838 2.708-5.849 0-9.968-4.8-10.002-9.93-.003-.473.027-1.119.164-1.864zm9.839 6.293c-.552 0-1-.449-1-1 0-.552.448-1 1-1s1 .448 1 1c0 .551-.448 1-1 1zm9.833-2.693c-.054.298-.392.734-.933.59-.378-.102-.614-.476-.543-.86.068-.48.139-.848.139-1.53 0-4.479-3.609-8.495-8.5-8.495-2.173 0-4.241.841-5.794 2.285l1.251.341c.4.107.638.518.531.918-.108.4-.519.637-.919.53l-3.225-.864c-.4-.107-.637-.518-.53-.918l.875-3.241c.107-.4.518-.638.918-.531.4.108.638.518.531.919l-.478 1.769c1.83-1.711 4.272-2.708 6.839-2.708 5.865 0 10.002 4.83 10.002 9.995 0 .724-.081 1.356-.164 1.8zm-9.836-.307c.414 0 .75-.337.75-.75v-4.992c0-.414-.336-.75-.75-.75s-.75.336-.75.75v4.992c0 .413.336.75.75.75z"
                fill-rule="nonzero"
                fill="rgb(255, 59, 48)"
              />
            </svg>
          )}
        </div>
      </main>
    </div>
  );
};

export default Home;
